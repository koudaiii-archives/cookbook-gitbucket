upstream jetty {
  server 127.0.0.1:8080;
}
server {
    listen 80;
    server_name <%= node['my_nginx']['servername'] %> <%= node['ipaddress'] %>; # change to match your URL
    return 301 https://$host$request_uri;
}
server {
  listen       443;
  ssl on;
  ssl_certificate /etc/nginx/server.crt;
  ssl_certificate_key  /etc/nginx/server.key;
  ssl_session_timeout  5m;
  
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
 
  ssl_prefer_server_ciphers on; # サーバ側の暗号化スイートを優先する
  ssl_dhparam /etc/nginx/dhparam.pem; # DHE暗号化スイートのためのパラメータファイル 
  server_name <%= node['my_nginx']['servername'] %> <%= node['ipaddress'] %>; # change to match your URL

  location = / {
  return 301 https://<%= node['my_nginx']['servername'] %>/gitbucket;
  }

  try_files $uri/index.html $uri @jetty;
  location @jetty {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://jetty;
  }

  access_log <%= node['nginx']['log_dir'] %>/<%= node['my_nginx']['app'] %>.access.log ltsv;
  error_log <%= node['nginx']['log_dir'] %>/<%= node['my_nginx']['app'] %>.error.log info;

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;

}

